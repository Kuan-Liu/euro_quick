library(tidyverse)
library(lubridate)
library(readxl)
library(rvest)
library(magrittr)
char_str <-read_excel("Elo1.xlsx")
team_loc <- char_str$`1`[which(str_detect(char_str$`1`, "[:alpha:]"))]
team_loc[17] <- "Czech Republic"
team_elo <- as.numeric(char_str$`1`[which(str_detect(char_str$`1`, "[:alpha:]")) +1])
gr  <- c("Group A: Turkey, Italy, Wales, Switzerland",
"Group B: Denmark, Finland, Belgium, Russia",
"Group C: Netherlands, Ukraine, Austria, North Macedonia",
"Group D: England, Croatia, Scotland, Czech Republic",
"Group E: Spain, Sweden, Poland, Slovakia",
"Group F: Hungary, Portugal, France, Germany")
View(char_str)
group_v <- vector(mode = "character",length = length(team_loc))
gr1 <- c("A","B","C","D","E","F")
for(i in seq_along(group_v)){
group_v[i] <- gr1[unlist(lapply(gr, function(x){str_detect(x, team_loc[i]) }))]
}
table(group_v)
install.packages("elo")
library("elo")
# expecct score is equal to
play_match <- function(elo1 ,elo2 ){
prwin <-elo.prob(  elo1 ,elo2)
prlose <- 1-prwin
prwin <- prwin*(1-0.22)
prlose <- prlose*(1-0.22)
pr_1 = c(prwin, 0.22, prlose)
res <-sample(c(3,1,0), prob =pr_1, size = 1 )
res2 <- c(0,1,3)[res == c(0,1,3)]
return(list(res_1 = res, res_2 = res2))
}
# team elo is a vector of 4
team_elo_group = team_elo[group_v == "A"]
sim_group <- function(team_elo ){
points_vec <- vector(mode = "numeric", length= length(team_elo) )
# team 1 plays team 2
res_g1 <-play_match(elo1 = team_elo_group[1],elo2 = team_elo_group[2])
points_vec[1] <- points_vec[1] + res_g1$res_1
points_vec[2] <- points_vec[2] + res_g1$res_2
# team 3 plays team 4
res_g2 <-play_match(elo1 = team_elo_group[3],elo2 = team_elo_group[4])
points_vec[3] <- points_vec[3] + res_g2$res_1
points_vec[4] <- points_vec[4] + res_g2$res_2
# team 1 playss team 3
res_g3 <-play_match(elo1 = team_elo_group[1],elo2 = team_elo_group[3])
points_vec[1] <- points_vec[1] + res_g3$res_1
points_vec[3] <- points_vec[3] + res_g3$res_2
# team 2 plays team 4
res_g4 <-play_match(elo1 = team_elo_group[2],elo2 = team_elo_group[4])
points_vec[2] <- points_vec[2] + res_g4$res_1
points_vec[4] <- points_vec[4] + res_g4$res_2
# team 1 plays team 4
res_g5 <-play_match(elo1 = team_elo_group[1],elo2 = team_elo_group[4])
points_vec[1] <- points_vec[1] + res_g5$res_1
points_vec[4] <- points_vec[4] + res_g5$res_2
# team 2 plays team 3
res_g6 <-play_match(elo1 = team_elo_group[2],elo2 = team_elo_group[3])
points_vec[2] <- points_vec[2] + res_g6$res_1
points_vec[3] <- points_vec[3] + res_g6$res_2
return(points_vec)
}
sim_tournament <- function(team_elo_v, team_name_v, group_v){
gra  <- sim_group(team_elo = team_elo[group_v == "A"])
gra <- data.frame(res = gra,
group = "A",
name = team_name_v[group_v == "A"])
grb  <- sim_group(team_elo = team_elo[group_v == "B"])
grb <- data.frame(res = grb,
group = "B",
name = team_name_v[group_v == "B"])
grc  <- sim_group(team_elo = team_elo[group_v == "C"])
grc <- data.frame(res = grc,
group = "C",
name = team_name_v[group_v == "C"])
grd  <- sim_group(team_elo = team_elo[group_v == "D"])
grd <- data.frame(res = grd,
group = "D",
name = team_name_v[group_v == "D"])
gre  <- sim_group(team_elo = team_elo[group_v == "E"])
gre <- data.frame(res = gre,
group = "E",
name = team_name_v[group_v == "E"])
grf  <- sim_group(team_elo = team_elo[group_v == "F"])
grf <- data.frame(res = grf,
group = "F",
name = team_name_v[group_v == "F"])
res <-rbind(gra,grb,grc,grd,gre,grf)
return(res)
}
B <- 5000
res_list <- vector(mode ="list", length= B)
for (j in seq_along(res_list)){
res_list[[j]] <- sim_tournament(team_elo_v = team_elo,team_name_v = team_loc,group_v = group_v)
res_list[[j]]$sim <- j
res_list[[j]]$start_elo <-team_elo
if(j %% 1000 == 0){message(j)}
}
res_df <- do.call(rbind, res_list)
View(res_df)
res_df <- res_df %>%
group_by(sim, group) %>%
arrange(desc(res), desc(start_elo) ) %>%
mutate(n = 1:n()) %>% ungroup() %>%
arrange(sim, group)
res_df %>%
group_by(group,name) %>%
summarise(mean = mean(n)) %>%
arrange(group, mean) %>% ungroup() %>%
rename(`mean placement` =  mean) -> l6
l6
res_df %>%
group_by(group,name) %>%
summarise(mean = mean(n)) %>%
arrange(group, mean) %>% ungroup() -> l5
l5 %>%
group(group) %>%
mutate(place = 1:n())
res_df %>%
ggplot(aes(x = n)) +
geom_histogram() +
facet_wrap(~name)
replicate(n = 1000, sim_tournament(team_elo_v = team_elo,team_name_v = team_loc,group_v = group_v),simplify = F)
?elo.prob
?play_match
team_elo_group[1]
elo2 = team_elo_group[2]
team_elo_group[2]
elo.prob(2013, 1801)
elo.prob(1912, 1609)
data("tournament")
force(tournament)
view(tournament)
install.packages("rvest")
library(rvest)
url1 <- "https://eloratings.net/Italy"
url2 <- "https://eloratings.net/Turkey"
read1 <- read_html(url1) %>%
# this is the CSS selector for the page title
html_nodes("#mainheader")
view(read1)
read1
read2 <- read_html(url2) %>%
# this is the CSS selector for the page title
html_nodes("#mainheader")
read2
wdir
getwd
getwd()
phantom_dir <- "D:/GitHub/euro_quick/"
italy_url <- "https://www.eloratings.net/Italy"
turkey_url <- "https://www.eloratings.net/Turkey"
phantom_dir <- "D:/GitHub/euro_quick/"
italy_url <- "https://www.eloratings.net/Italy"
turkey_url <- "https://www.eloratings.net/Turkey"
# use system2 to invoke phantomjs via it's executable
system2("D:/GitHub/euro_quick/phantomjs-2.1.1-windows/bin/phantomjs.exe",
#provide the path to the scraping script and the country url as argument
args = c(file.path(phantom_dir, "scrape_ELO.js"), italy_url))
system2("D:/GitHub/euro_quick/phantomjs-2.1.1-windows/bin/phantomjs.exe",
#provide the path to the scraping script and the country url as argument
args = c(file.path(phantom_dir, "scrape_ELO.js"), italy_url))
#Scraping data;
italy_url <- "https://www.eloratings.net/Italy"
turkey_url <- "https://www.eloratings.net/Turkey"
# use system2 to invoke phantomjs via it's executable
system2("D:/GitHub/euro_quick/phantomjs-2.1.1-windows/bin/phantomjs.exe",
#provide the path to the scraping script and the country url as argument
args = c(file.path("scrape_ELO.js"), italy_url))
page <- read_html("elopage.html")
country_name <- page %>%
html_nodes("#mainheader") %>%
html_text() %>%
gsub("Elo Ratings: ", "", .)
country_name
View(page)
scrape_nation <- function(country) {
# download the page
url <- paste0("https://eloratings.net/", country)
system2("D:/GitHub/euro_quick/phantomjs-2.1.1-windows/bin/phantomjs.exe",
args = c(file.path("scrape_ELO.js"), url))
# read in downloaded page
page <- read_html("elopage.html")
# recover information
country_name <- page %>%
html_nodes("#mainheader") %>%
html_text() %>%
gsub("Elo Ratings: ", "", .)
opposing <- page %>%
html_nodes(".r1 a") %>%
html_text()
teams <- page %>%
html_nodes(".r1")
fixtures <- map2_df(teams, opposing, split_teams)
ratings <- page %>%
html_nodes(".r4") %>%
html_text() %>%
map_df(., split_ratings)
rankings <- page %>%
html_nodes(".r6") %>%
map_df(., split_rankings)
dates <- page %>%
html_nodes(".r0") %>%
html_text() %>%
map_df(., convert_date)
# bind into a data frame
df <- fixtures %>%
cbind(., ratings) %>%
cbind(., rankings) %>%
cbind(., dates) %>%
mutate(table_country = country_name)
}
elO_data <- map_df(italy_url, scrape_nation(Italy))
elO_data <- map(italy_url, scrape_nation(Italy))
library(tidyverse)
elO_data <- map_df(italy_url, scrape_nation(Italy))
elO_data <- map_df(italy_url, scrape_nation)
library(tidyverse)
library(rvest)
#Scraping data;
italy_url <- "https://www.eloratings.net/Italy"
turkey_url <- "https://www.eloratings.net/Turkey"
# use system2 to invoke phantomjs via it's executable
# Testing for a single country;
system2("D:/GitHub/euro_quick/phantomjs-2.1.1-windows/bin/phantomjs.exe",
#provide the path to the scraping script and the country url as argument
args = c(file.path("scrape_ELO.js"), italy_url))
page <- read_html("elopage.html")
# scrape with rvest as normal
country_name <- page %>%
html_nodes("#mainheader") %>%
html_text() %>%
gsub("Elo Ratings: ", "", .)
country_name
opposing <- page %>%
html_nodes(".r1 a") %>%
html_text()
opposing
opposing <- page %>%
html_nodes(".r1 a")
View(opposing)
#Scraping data;
italy_url <- "https://www.eloratings.net/Italy"
turkey_url <- "https://www.eloratings.net/Turkey"
italy_page<- read_html(italy_url)
italy<- italy_page %>% html_nodes("#maindiv")
View(italy)
italy_op<- italy_page %>% html_nodes("a")
italy_op<- italy_page %>% html_nodes("a") %>% html_text()
italy_op<- italy_page %>% html_nodes(".r1 a") %>% html_text()
italy_page<- read_html(italy_url)
italy_op<- italy_page %>% html_nodes(".r1 a") %>% html_text()
italy_team<- italy_page %>% html_nodes(".r1") %>% html_text()
italy_goal<- italy_page %>% html_nodes(".r2") %>% html_text()
italy_team<- italy_page %>% html_nodes(".r1") %>% html_text()
italy_goal<- italy_page %>% html_nodes(".r2") %>% html_text()
italy_rating<- italy_page %>% html_nodes(".r5") %>% html_text()
italy_date<- italy_page %>% html_nodes(".r0") %>% html_text()
italy_team
italy_page %>% html_nodes(".r1") %>% html_text()
italy_page %>% html_nodes(".r1")
country_name <- page %>%
html_nodes("#maindiv") %>%
html_text()
country_name
country_name <- italy_page %>%
html_nodes("#maindiv") %>%
html_text()
country_name
